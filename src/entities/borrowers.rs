//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Borrowers")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub borrower_id: i32,
    pub borrower_name: String,
    #[sea_orm(unique)]
    pub borrower_email: String,
    #[sea_orm(unique)]
    pub borrower_password: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::borrower_payment_ledger::Entity")]
    BorrowerPaymentLedger,
    #[sea_orm(has_many = "super::loan_requests::Entity")]
    LoanRequests,
}

impl Related<super::borrower_payment_ledger::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BorrowerPaymentLedger.def()
    }
}

impl Related<super::loan_requests::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LoanRequests.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
